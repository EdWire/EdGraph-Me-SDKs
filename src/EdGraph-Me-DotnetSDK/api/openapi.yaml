openapi: 3.0.1
info:
  description: Me Api - v1.0
  title: Me Api
  version: v1.0
servers:
- url: https://api.edgraph.dev/tenant
security:
- oauth2:
  - https://api.edgraph.com/tenant
paths:
  /me/extensions/{code}:
    delete:
      operationId: RemoveUserExtension
      parameters:
      - description: ""
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.User.V1.UserExtensionRemovedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Removes a user's profile extension.
      tags:
      - My Extensions
  /me/extensions:
    post:
      operationId: SetUserExtension
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.User.V1.UserExtensionSetResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates or update a user's profile extension.
      tags:
      - My Extensions
  /me/preferences:
    post:
      operationId: UpdateUserPreferenceAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityApi.User.V1.UserPreferenceUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Creates or update a user's preference.
      tags:
      - My Preferences
  /me:
    get:
      operationId: GetUserCacheAsync
      parameters:
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheResponse'
          description: The requested resource was successfully retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: "Retrieves the profile of the user that is currently logged in, including\
        \ the user's preferences and its associated tenants"
      tags:
      - My Profile
components:
  schemas:
    EdGraph.Common.Errors.Core.ProblemDetails:
      additionalProperties: false
      properties:
        type:
          nullable: true
          type: string
        status:
          format: int32
          type: integer
        title:
          nullable: true
          type: string
        details:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
        extensions:
          additionalProperties:
            nullable: true
          nullable: true
          readOnly: true
          type: object
      type: object
    EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest:
      additionalProperties: false
      properties:
        tenantId:
          format: uuid
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheResponse:
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        tenants:
        - tenantType: tenantType
          tenantStatus: tenantStatus
          educationOrganizations:
          - shortNameOfInstitution: shortNameOfInstitution
            staffClassifications:
            - staffClassifications
            - staffClassifications
            educationOrganizationId: 0
            source: source
            nameOfInstitution: nameOfInstitution
          - shortNameOfInstitution: shortNameOfInstitution
            staffClassifications:
            - staffClassifications
            - staffClassifications
            educationOrganizationId: 0
            source: source
            nameOfInstitution: nameOfInstitution
          licenses:
          - roles:
            - role: role
              isImplicitlyAssigned: true
              educationOrganizationId: 6
              staffClassification: staffClassification
              status: status
            - role: role
              isImplicitlyAssigned: true
              educationOrganizationId: 6
              staffClassification: staffClassification
              status: status
            applicationId: applicationId
            applicationName: applicationName
          - roles:
            - role: role
              isImplicitlyAssigned: true
              educationOrganizationId: 6
              staffClassification: staffClassification
              status: status
            - role: role
              isImplicitlyAssigned: true
              educationOrganizationId: 6
              staffClassification: staffClassification
              status: status
            applicationId: applicationId
            applicationName: applicationName
          organizationName: organizationName
          organizationIdentifier: organizationIdentifier
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          isDemo: true
        - tenantType: tenantType
          tenantStatus: tenantStatus
          educationOrganizations:
          - shortNameOfInstitution: shortNameOfInstitution
            staffClassifications:
            - staffClassifications
            - staffClassifications
            educationOrganizationId: 0
            source: source
            nameOfInstitution: nameOfInstitution
          - shortNameOfInstitution: shortNameOfInstitution
            staffClassifications:
            - staffClassifications
            - staffClassifications
            educationOrganizationId: 0
            source: source
            nameOfInstitution: nameOfInstitution
          licenses:
          - roles:
            - role: role
              isImplicitlyAssigned: true
              educationOrganizationId: 6
              staffClassification: staffClassification
              status: status
            - role: role
              isImplicitlyAssigned: true
              educationOrganizationId: 6
              staffClassification: staffClassification
              status: status
            applicationId: applicationId
            applicationName: applicationName
          - roles:
            - role: role
              isImplicitlyAssigned: true
              educationOrganizationId: 6
              staffClassification: staffClassification
              status: status
            - role: role
              isImplicitlyAssigned: true
              educationOrganizationId: 6
              staffClassification: staffClassification
              status: status
            applicationId: applicationId
            applicationName: applicationName
          organizationName: organizationName
          organizationIdentifier: organizationIdentifier
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          isDemo: true
        preferences:
        - clientId: clientId
          code: code
          tenantId: tenantId
          value: value
        - clientId: clientId
          code: code
          tenantId: tenantId
          value: value
        extensions:
        - code: code
          data: data
        - code: code
          data: data
        browserDebugEnabled: true
        userName: userName
        email: email
      properties:
        userName:
          description: The user name for this user.
          nullable: true
          type: string
        email:
          description: The email address for this user.
          nullable: true
          type: string
        firstName:
          description: The first name for this user.
          nullable: true
          type: string
        lastName:
          description: The last name for this user.
          nullable: true
          type: string
        preferences:
          description: List of preferences associated with this user
          items:
            $ref: '#/components/schemas/IdentityApi.User.V1.Preference'
          nullable: true
          type: array
        tenants:
          description: List of tenants associated with this user
          items:
            $ref: '#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantResponse'
          nullable: true
          type: array
        browserDebugEnabled:
          description: Flag to indicate if the debug mode for user is enabled
          type: boolean
        extensions:
          items:
            $ref: '#/components/schemas/IdentityApi.User.V1.UserExtension'
          nullable: true
          type: array
      type: object
    EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantEducationOrganizationResponse:
      additionalProperties: false
      example:
        shortNameOfInstitution: shortNameOfInstitution
        staffClassifications:
        - staffClassifications
        - staffClassifications
        educationOrganizationId: 0
        source: source
        nameOfInstitution: nameOfInstitution
      properties:
        educationOrganizationId:
          format: int32
          type: integer
        shortNameOfInstitution:
          nullable: true
          type: string
        nameOfInstitution:
          nullable: true
          type: string
        staffClassifications:
          items:
            type: string
          nullable: true
          type: array
        source:
          nullable: true
          type: string
      type: object
    EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantResponse:
      additionalProperties: false
      example:
        tenantType: tenantType
        tenantStatus: tenantStatus
        educationOrganizations:
        - shortNameOfInstitution: shortNameOfInstitution
          staffClassifications:
          - staffClassifications
          - staffClassifications
          educationOrganizationId: 0
          source: source
          nameOfInstitution: nameOfInstitution
        - shortNameOfInstitution: shortNameOfInstitution
          staffClassifications:
          - staffClassifications
          - staffClassifications
          educationOrganizationId: 0
          source: source
          nameOfInstitution: nameOfInstitution
        licenses:
        - roles:
          - role: role
            isImplicitlyAssigned: true
            educationOrganizationId: 6
            staffClassification: staffClassification
            status: status
          - role: role
            isImplicitlyAssigned: true
            educationOrganizationId: 6
            staffClassification: staffClassification
            status: status
          applicationId: applicationId
          applicationName: applicationName
        - roles:
          - role: role
            isImplicitlyAssigned: true
            educationOrganizationId: 6
            staffClassification: staffClassification
            status: status
          - role: role
            isImplicitlyAssigned: true
            educationOrganizationId: 6
            staffClassification: staffClassification
            status: status
          applicationId: applicationId
          applicationName: applicationName
        organizationName: organizationName
        organizationIdentifier: organizationIdentifier
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        isDemo: true
      properties:
        tenantId:
          format: uuid
          type: string
        tenantType:
          nullable: true
          type: string
        organizationIdentifier:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        tenantStatus:
          nullable: true
          type: string
        isDemo:
          type: boolean
        educationOrganizations:
          items:
            $ref: '#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantEducationOrganizationResponse'
          nullable: true
          type: array
        licenses:
          items:
            $ref: '#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicense'
          nullable: true
          type: array
      type: object
    EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicense:
      additionalProperties: false
      example:
        roles:
        - role: role
          isImplicitlyAssigned: true
          educationOrganizationId: 6
          staffClassification: staffClassification
          status: status
        - role: role
          isImplicitlyAssigned: true
          educationOrganizationId: 6
          staffClassification: staffClassification
          status: status
        applicationId: applicationId
        applicationName: applicationName
      properties:
        applicationId:
          nullable: true
          type: string
        applicationName:
          nullable: true
          type: string
        roles:
          items:
            $ref: '#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicenseRole'
          nullable: true
          type: array
      type: object
    EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicenseRole:
      additionalProperties: false
      example:
        role: role
        isImplicitlyAssigned: true
        educationOrganizationId: 6
        staffClassification: staffClassification
        status: status
      properties:
        role:
          nullable: true
          type: string
        isImplicitlyAssigned:
          type: boolean
        status:
          nullable: true
          type: string
        educationOrganizationId:
          format: int32
          nullable: true
          type: integer
        staffClassification:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.Preference:
      additionalProperties: false
      example:
        clientId: clientId
        code: code
        tenantId: tenantId
        value: value
      properties:
        tenantId:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.SetUserExtensionRequest:
      additionalProperties: false
      properties:
        userId:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        data:
          nullable: true
          type: string
        dataType:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.UserExtension:
      additionalProperties: false
      example:
        code: code
        data: data
      properties:
        code:
          nullable: true
          type: string
        data:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.UserExtensionRemovedResponse:
      additionalProperties: false
      example:
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.UserExtensionSetResponse:
      additionalProperties: false
      example:
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
      type: object
    IdentityApi.User.V1.UserPreferenceUpdatedResponse:
      additionalProperties: false
      example:
        clientId: clientId
        code: code
        tenantId: tenantId
        value: value
      properties:
        tenantId:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    Microsoft.AspNetCore.Mvc.ValidationProblemDetails:
      additionalProperties: {}
      properties:
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          nullable: true
          type: object
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
  securitySchemes:
    oauth2:
      description: Use bearer token generated from an OpenId server
      flows:
        clientCredentials:
          scopes:
            https://api.edgraph.com/tenant: EdGraph Platform - Tenant Api
          tokenUrl: https://login.edgraph.dev/connect/token
      type: oauth2

